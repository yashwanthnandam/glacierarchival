version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - SECRET_KEY=local-test-secret-key-for-development-only
      - ENCRYPTION_KEY=sjB_5rwm6IAy8BJGDkntbp2qcBONObY1etYdf4G7LDw=
      - DEBUG=True
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0
      - CSRF_TRUSTED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000
      - DATABASE_URL=sqlite:///db_local.sqlite3
      - DB_HOST=postgres
      - DB_NAME=datahibernate_local
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_PORT=5432
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_STORAGE_BUCKET_NAME=datahibernate-test-local-1760515615
      - AWS_S3_REGION_NAME=ap-south-1
      - REDIS_URL=redis://redis:6379/1
      - EMAIL_HOST=
      - EMAIL_PORT=587
      - EMAIL_USE_TLS=False
      - EMAIL_USE_SSL=False
      - EMAIL_HOST_USER=
      - EMAIL_HOST_PASSWORD=
      - DEFAULT_FROM_EMAIL=Local Test <test@localhost>
      - FRONTEND_URL=http://localhost:3000
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000,http://localhost:5173,http://127.0.0.1:5173
      - CSRF_TRUSTED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000,http://localhost:5173,http://127.0.0.1:5173
      - RAZORPAY_KEY_ID=
      - RAZORPAY_KEY_SECRET=
    volumes:
      - ./backend:/app
      - local_db_data:/app/db_local.sqlite3
    command: >
      sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    depends_on:
      redis:
        condition: service_started
      postgres:
        condition: service_healthy

  celery-worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - SECRET_KEY=local-test-secret-key-for-development-only
      - ENCRYPTION_KEY=sjB_5rwm6IAy8BJGDkntbp2qcBONObY1etYdf4G7LDw=
      - DEBUG=True
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0
      - CSRF_TRUSTED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000
      - DATABASE_URL=sqlite:///db_local.sqlite3
      - DB_HOST=postgres
      - DB_NAME=datahibernate_local
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_PORT=5432
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_STORAGE_BUCKET_NAME=datahibernate-test-local-1760515615
      - AWS_S3_REGION_NAME=ap-south-1
      - REDIS_URL=redis://redis:6379/1
      - EMAIL_HOST=
      - EMAIL_PORT=587
      - EMAIL_USE_TLS=False
      - EMAIL_USE_SSL=False
      - EMAIL_HOST_USER=
      - EMAIL_HOST_PASSWORD=
      - DEFAULT_FROM_EMAIL=Local Test <test@localhost>
      - FRONTEND_URL=http://localhost:3000
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000,http://localhost:5173,http://127.0.0.1:5173
      - CSRF_TRUSTED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000,http://localhost:5173,http://127.0.0.1:5173
      - RAZORPAY_KEY_ID=
      - RAZORPAY_KEY_SECRET=
    volumes:
      - ./backend:/app
      - local_db_data:/app/db_local.sqlite3
    command: celery -A deeparchival worker --loglevel=info
    depends_on:
      redis:
        condition: service_started
      postgres:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - VITE_API_BASE_URL=http://localhost:8000/api/
      - VITE_USE_SECURE_AUTH=false
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: sh -c "npm run dev -- --port 3000 --host"
    depends_on:
      - backend

  celery-beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - SECRET_KEY=local-test-secret-key-for-development-only
      - ENCRYPTION_KEY=sjB_5rwm6IAy8BJGDkntbp2qcBONObY1etYdf4G7LDw=
      - DEBUG=True
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0
      - CSRF_TRUSTED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000
      - DATABASE_URL=sqlite:///db_local.sqlite3
      - DB_HOST=postgres
      - DB_NAME=datahibernate_local
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_PORT=5432
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_STORAGE_BUCKET_NAME=datahibernate-test-local-1760515615
      - AWS_S3_REGION_NAME=ap-south-1
      - REDIS_URL=redis://redis:6379/1
      - EMAIL_HOST=
      - EMAIL_PORT=587
      - EMAIL_USE_TLS=False
      - EMAIL_USE_SSL=False
      - EMAIL_HOST_USER=
      - EMAIL_HOST_PASSWORD=
      - DEFAULT_FROM_EMAIL=Local Test <test@localhost>
      - FRONTEND_URL=http://localhost:3000
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000,http://localhost:5173,http://127.0.0.1:5173
      - CSRF_TRUSTED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000,http://localhost:5173,http://127.0.0.1:5173
      - RAZORPAY_KEY_ID=
      - RAZORPAY_KEY_SECRET=
    volumes:
      - ./backend:/app
      - local_db_data:/app/db_local.sqlite3
    command: celery -A deeparchival beat --loglevel=info
    depends_on:
      redis:
        condition: service_started
      postgres:
        condition: service_healthy

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: datahibernate_local
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - pg_data:/var/lib/postgresql/data

volumes:
  local_db_data:
  redis_data:
  pg_data:
