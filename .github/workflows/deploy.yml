name: Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  SERVER_IP: 3.110.26.97
  SERVER_USER: ec2-user
  PROJECT_DIR: /home/ec2-user

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install frontend dependencies
      run: |
        cd frontend
        npm install
        
    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ env.SERVER_IP }}
        username: ${{ env.SERVER_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          cd ${{ env.PROJECT_DIR }}
          
          echo "🔄 Stopping services..."
          docker-compose -f docker-compose.production.yml down
          
          echo "🔄 Setting up repository..."
          if [ -d "glacierarchival" ]; then
            cd glacierarchival
            git fetch origin
            git reset --hard origin/main
          else
            git clone https://github.com/yashwanthnandam/glacierarchival.git
            cd glacierarchival
          fi
          
          echo "🔄 Setting up environment variables..."
          # Create .env.production file with actual credentials
          cat > .env.production << 'EOF'
          AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          EMAIL_HOST_PASSWORD=${{ secrets.EMAIL_HOST_PASSWORD }}
          RAZORPAY_KEY_ID=${{ secrets.RAZORPAY_KEY_ID }}
          RAZORPAY_KEY_SECRET=${{ secrets.RAZORPAY_KEY_SECRET }}
          SECRET_KEY=${{ secrets.SECRET_KEY }}
          ENCRYPTION_KEY=${{ secrets.ENCRYPTION_KEY }}
          EOF
          
          # Create backend/.env file (required by docker-compose)
          cat > backend/.env << 'EOF'
          AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          EMAIL_HOST_PASSWORD=${{ secrets.EMAIL_HOST_PASSWORD }}
          RAZORPAY_KEY_ID=${{ secrets.RAZORPAY_KEY_ID }}
          RAZORPAY_KEY_SECRET=${{ secrets.RAZORPAY_KEY_SECRET }}
          SECRET_KEY=${{ secrets.SECRET_KEY }}
          ENCRYPTION_KEY=${{ secrets.ENCRYPTION_KEY }}
          EOF
          
          echo "🔄 Building frontend..."
          cd frontend
          npm install
          npm run build
          cd ..
          
          echo "🔄 Building and starting services..."
          docker-compose -f docker-compose.production.yml --env-file .env.production up --build -d
          
          echo "⏳ Waiting for services to start..."
          sleep 15
          
          echo "🔄 Running database migrations..."
          docker exec glacierarchival-backend-1 python manage.py migrate
          
          echo "🔄 Collecting static files..."
          docker exec glacierarchival-backend-1 python manage.py collectstatic --noinput
          
          echo "🔄 Restarting services..."
          docker-compose -f docker-compose.production.yml --env-file .env.production restart
          
          echo "✅ Deployment completed!"
          
    - name: Health check
      run: |
        sleep 30
        curl -f https://datahibernate.in/api/auth/user/ || exit 1
        echo "✅ Health check passed!"
        
    - name: Notify deployment status
      if: always()
      run: |
        if [ "${{ job.status }}" == "success" ]; then
          echo "🚀 Deployment successful!"
        else
          echo "❌ Deployment failed!"
        fi
